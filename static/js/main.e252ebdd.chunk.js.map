{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","id","name","_useState","useState","_useState2","Object","slicedToArray","count","setCount","react_default","a","createElement","className","src","concat","alt","onClick","CardList","robots","map","user","i","components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","setRobots","_useState3","_useState4","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","event","target","value","console","log","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"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","file":"static/js/main.e252ebdd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'tachyons';\n\nconst Card = ({ id, name }) => {\n    const [count, setCount] = useState(1)\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            \n            <img  src={`https://robohash.org/${id}?set=set${count}`} alt='robots' />\n            <div>\n                <h2 className='tc br3'>{name}</h2>\n                <button\n                    className=\"tc pill pa3 ma3 grow br3 b--light-purple bg-black white\"\n                    onClick={() => setCount(count <= 0? 1 : count - 1)}>\n                        Prev\n                </button>\n                <button className=\"tc pill pa3 ma3 grow br3 b--light-purple bg-black white\"\n                            onClick={() => setCount(count >= 5? 1 : count + 1)}>\n                        Next\n                    </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n            robots.map((user, i) => {\n                return(\n                    <Card \n                        key={i} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                    />\n                    ) \n                })\n            }\n      </div> \n    )\n}\n\nexport default CardList;","import React from 'react';\nimport '../containers/App.css';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='tc pa3 ba b--green bg-light-blue'\n            type='search' \n            placeholder='write your name'\n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'scroll', border: '3px solid black', height: '1000px'}}>\n            {props.children}\n        </div>\n    )\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\n\nclass ErrorBoundry extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n           return <h1>Ooops. That is not good</h1>\n        } \n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n\nfunction App() {\n\n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchfield] = useState('')\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => { setRobots(users) });\n    }, []) // only run when count changes\n\n    const onSearchChange = (event) => {\n        setSearchfield(event.target.value)\n    }\n\n    const handleClick = () => {\n         console.log(searchfield);\n    }\n     \n    const filteredRobots = robots.filter(robot => { \n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n        return !robots.length ?\n            <h1 className='tc f1'>Loading ...</h1>:\n            (\n                <div className='tc'>\n                    <h1 className='f1'>RoboYourself</h1>\n                    <SearchBox searchChange={onSearchChange} />\n                    <h3 className='tc white f2'>{ searchfield }</h3>\n                    <button className=\"\n                            tc pill pa3 ma3 grow br3 \n                            b--light-purple bg-black white\"\n                        onClick={handleClick}>\n                        Generate\n                    </button>\n                    <Scroll>   \n                        <ErrorBoundry>\n                            <CardList robots={filteredRobots} /> \n                        </ErrorBoundry>\n                    </Scroll>\n                    \n                </div>\n            );\n}\n\n\nexport default App;\n\n// Props -> Are simply things that come out of state\n// State -> Description or what describes the App\n// It is something that can change and affect our App\n// Children -> Way to render children. Every props object has children","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}